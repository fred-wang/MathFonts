# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

COMPRESS=@PYTHON@ ../compress-font.py

# Build all the open source fonts
all: Asana DejaVu FiraMath Garamond GFS_NeoHellenic LatinModern LeteSansMath Libertinus NewComputerModern NewComputerModernSans STIX TeXGyreBonum TeXGyrePagella TeXGyreSchola TeXGyreTermes XITS

# Make all the commands for font generations PHONY as they are very fast.
# The download operations are slower and will only be performed once.
# FIXME: This is no longer true with woff2 compression.
# See https://github.com/fred-wang/MathFonts/issues/5
.PHONY: clean distclean Asana DejaVu FiraMath Garamond GFS_NeoHellenic LatinModern LeteSansMath Libertinus NeoEuler NewComputerModern NewComputerModernSans STIX TeXGyreBonum TeXGyrePagella TeXGyreSchola TeXGyreTermes XITS


# Asana

ASANA_URL="http://mirrors.ctan.org/fonts/Asana-Math.zip"
OFL_LICENSE_URL="https://openfontlicense.org/documents/OFL.txt"
OFL_FAQ_URL="https://openfontlicense.org/documents/OFL-FAQ.txt"

Asana/Asana-Math:
	 # Get the package from CTAN and add the OFL text documents.
	cd Asana; @WGET@ $(ASANA_URL); @UNZIP@ Asana-Math.zip; \
	cd Asana-Math; @WGET@ $(OFL_FAQ_URL) -O OFL-FAQ.txt; \
	@WGET@ $(OFL_LICENSE_URL) -O OFL.txt;

Asana: Asana/Asana-Math
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/Asana-Math.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ Asana-Math.woff

# DejaVu

DEJAVU_VERSION=2.36
DEJAVU_URL=http://sourceforge.net/projects/dejavu/files/dejavu/$(DEJAVU_VERSION)/dejavu-fonts-ttf-$(DEJAVU_VERSION).zip

DejaVu/dejavu-fonts-ttf:
	 # Get the package
	cd DejaVu; @WGET@ $(DEJAVU_URL); \
	@UNZIP@ dejavu-fonts-ttf-$(DEJAVU_VERSION).zip; \
	mv dejavu-fonts-ttf-$(DEJAVU_VERSION) dejavu-fonts-ttf

DejaVu: DejaVu/dejavu-fonts-ttf
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/DejaVuMathTeXGyre.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ DejaVuMathTeXGyre.woff

# Fira Math

FIRAMATH_VERSION=0.3.4
FIRAMATH_URL=https://github.com/firamath/firamath/releases/download/v$(FIRAMATH_VERSION)/FiraMath-Regular.otf
FIRAMATH_GITHUB=https://raw.githubusercontent.com/firamath/firamath/main/

FiraMath/firamath:
	 # Get the package
	mkdir -p $@; cd $@; \
	@WGET@ $(FIRAMATH_GITHUB)/LICENSE; \
	@WGET@ $(FIRAMATH_GITHUB)/README.md; \
	@WGET@ $(FIRAMATH_URL)

FiraMath: FiraMath/firamath
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/FiraMath-Regular.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ FiraMath-Regular.woff

# Garamond

GARAMOND_URL=https://bitbucket.org/georgd/eb-garamond/downloads/EBGaramond-0.016.zip
GARAMONDMATH_URL=https://mirrors.ctan.org/fonts/garamond-math.zip

Garamond/garamond:
	 # Get the Garamond font
	mkdir -p $@; \
	cd Garamond; @WGET@ $(GARAMOND_URL) -O garamond.zip; \
	@UNZIP@ -j garamond.zip -d garamond;
	 # Get the Garamond Math font
	cd Garamond; @WGET@ $(GARAMONDMATH_URL); \
	@UNZIP@ -j garamond-math.zip -d garamond;

Garamond: Garamond/garamond
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/Garamond-Math.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ Garamond-Math.woff

# GFS Neohellenic Math

GFS_NEOHELLENIC_URL=https://greekfontsociety-gfs.gr/_assets/fonts/GFS_NeoHellenic.zip
GFS_NEOHELLENICMATH_URL=https://greekfontsociety-gfs.gr/_assets/fonts/GFS_NeoHellenic_Math.zip

GFS_NeoHellenic/gfs_neohellenic:
	 # Get the GFS NeoHellenic font
	cd GFS_NeoHellenic; @WGET@ $(GFS_NEOHELLENIC_URL); \
	mkdir gfs_neohellenic; \
	@UNZIP@ -j GFS_NeoHellenic.zip -d gfs_neohellenic;
	 # Get the GFS NeoHellenic Math font
	cd GFS_NeoHellenic; @WGET@ $(GFS_NEOHELLENICMATH_URL); \
	@UNZIP@ -j GFS_NeoHellenic_Math.zip -d gfs_neohellenic;

GFS_NeoHellenic: GFS_NeoHellenic/gfs_neohellenic
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/GFSNeohellenicMath.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ GFSNeohellenicMath.woff

# Latin Modern

LATINMODERN_URL="http://www.gust.org.pl/projects/e-foundry/latin-modern/download/lm2.004otf.zip"
LATINMODERN_HISTORY_URL="http://www.gust.org.pl/projects/e-foundry/latin-modern/download/lm-hist.txt/at_download/file"
LATINMODERN_MANIFEST_URL="http://www.gust.org.pl/projects/e-foundry/latin-modern/download/manifest-latin-modern.txt/at_download/file"
LATINMODERN_README_URL="http://www.gust.org.pl/projects/e-foundry/latin-modern/download/readme-latin-modern.txt/at_download/file"
LATINMODERNMATH_URL="http://www.gust.org.pl/projects/e-foundry/lm-math/download/latinmodern-math-1959.zip"

LatinModern/latinmodern:
	 # Get the Latin Modern from GUST
	cd LatinModern; @WGET@ $(LATINMODERN_URL); \
	mkdir latinmodern; @UNZIP@ lm*otf.zip -d latinmodern;
	@WGET@ $(LATINMODERN_HISTORY_URL) -O $@/lm-hist.txt
	@WGET@ $(LATINMODERN_MANIFEST_URL) -O $@/MANIFEST-Latin-Modern.TXT
	@WGET@ $(LATINMODERN_README_URL) -O $@/README-Latin-Modern.TXT
	 # Get the Latin Modern Math from GUST
	cd LatinModern; @WGET@ $(LATINMODERNMATH_URL); \
	@UNZIP@ -j latinmodern-math-*.zip -d latinmodern;

LatinModern: LatinModern/latinmodern
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/latinmodern-math.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ latinmodern-math.woff

# Lete Sans Math
#
LETESANS_URL="http://mirrors.ctan.org/fonts/lete-sans-math.zip"
OFL_LICENSE_URL="https://openfontlicense.org/documents/OFL.txt"
OFL_FAQ_URL="https://openfontlicense.org/documents/OFL-FAQ.txt"

LeteSansMath/lete-sans-math:
	 # Get the package from CTAN and add the OFL text documents.
	cd LeteSansMath; @WGET@ $(LETESANS_URL); @UNZIP@ lete-sans-math.zip; \
	cd lete-sans-math; @WGET@ $(OFL_FAQ_URL) -O OFL-FAQ.txt; \
	@WGET@ $(OFL_LICENSE_URL) -O OFL.txt;

LeteSansMath: LeteSansMath/lete-sans-math
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/LeteSansMath.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ LeteSansMath.woff

# Libertinus
LIBERTINUS_URL=https://github.com/khaledhosny/libertinus/releases/download/v6.2/libertinus-6.2.zip
LIBERTINUS_FONTS=libertinusmath-regular.otf libertinusserif-regular.otf \
                libertinusserif-bold.otf libertinusserif-italic.otf \
                libertinusserif-bolditalic.otf

Libertinus/libertinus:
	 # Get the Libertinus fonts from GitHub.
	cd Libertinus; \
	@WGET@ $(LIBERTINUS_URL); @UNZIP@ libertinus*.zip -d libertinus;

Libertinus: Libertinus/libertinus
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/libertinusmath-regular.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ libertinusmath-regular.woff

# Neo Euler

NEO_EULER_URL="https://github.com/khaledhosny/euler-otf/archive/master.zip"

NeoEuler/euler-otf-master:
	 # Get the package from GitHub
	cd NeoEuler; @WGET@ $(NEO_EULER_URL); @UNZIP@ master.zip;

NeoEuler: NeoEuler/euler-otf-master
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/euler.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ euler.woff

# NewComputerModern
NEWCOMPUTERMODERN_URL="https://mirrors.ctan.org/fonts/newcomputermodern.zip"
GFL_URL="http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt"
NEWCOMPUTERMODERN_FONTS=NewCMMath-Book NewCM10-Book NewCM10-BookItalic NewCM10-Bold NewCM10-BoldItalic

NewComputerModern/newcomputermodern:
	 # Get the TeX Gyre Bonum from GUST
	cd NewComputerModern; @WGET@ $(NEWCOMPUTERMODERN_URL); \
	@UNZIP@ newcomputermodern.zip ;
	@WGET@ $(GFL_URL) -O $@/GUST-FONT-LICENSE.txt ;

NewComputerModern: NewComputerModern/newcomputermodern
	# Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/NewCMMath-Book.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	# Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ NewCMMath-Book.woff

NewComputerModernSans: NewComputerModern/newcomputermodern
	# Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/NewCMSansMath-Regular.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	# Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ NewCMSansMath-Regular.woff


# TeXGyreBonum
TEXGYREBONUM_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/bonum/qbk2.004otf.zip"
TEXGYREBONUM_HISTORY_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/bonum/qbk-hist.txt/at_download/file"
TEXGYREBONUM_MANIFEST_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/bonum/manifest-tex-gyre-bonum.txt/at_download/file"
TEXGYREBONUM_README_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/bonum/readme-tex-gyre-bonum.txt/at_download/file"
TEXGYREBONUMMATH_URL="http://www.gust.org.pl/projects/e-foundry/tg-math/download/texgyrebonum-math-1005.zip"

TeXGyreBonum/texgyrebonum:
	 # Get the TeX Gyre Bonum from GUST
	cd TeXGyreBonum; @WGET@ $(TEXGYREBONUM_URL); \
	mkdir texgyrebonum; @UNZIP@ qbk*otf.zip -d texgyrebonum;
	@WGET@ $(TEXGYREBONUM_HISTORY_URL) -O $@/qbk-hist.txt
	@WGET@ $(TEXGYREBONUM_MANIFEST_URL) -O $@/MANIFEST-TeX-Gyre-Bonum.TXT
	@WGET@ $(TEXGYREBONUM_README_URL) -O $@/README-TeX-Gyre-Bonum.TXT
	 # Get the TeX Gyre Bonum Math from GUST
	cd TeXGyreBonum; @WGET@ $(TEXGYREBONUMMATH_URL); \
	@UNZIP@ -j texgyrebonum-math-*.zip -d texgyrebonum;

TeXGyreBonum: TeXGyreBonum/texgyrebonum
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/texgyrebonum-math.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ texgyrebonum-math.woff

# TeXGyrePagella
TEXGYREPAGELLA_URL="https://www.gust.org.pl/projects/e-foundry/tex-gyre/pagella/qpl2_501otf.zip"
TEXGYREPAGELLA_HISTORY_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/pagella/qpl-hist.txt/at_download/file"
TEXGYREPAGELLA_MANIFEST_URL="https://www.gust.org.pl/projects/e-foundry/tex-gyre/pagella/MANIFEST-TeX-Gyre-Pagella.txt/at_download/file"
TEXGYREPAGELLA_README_URL="https://www.gust.org.pl/projects/e-foundry/tex-gyre/pagella/README-TeX-Gyre-Pagella.txt/at_download/file"
TEXGYREPAGELLAMATH_URL="https://www.gust.org.pl/projects/e-foundry/tg-math/download/texgyrepagella-math-1632.zip"

TeXGyrePagella/texgyrepagella:
	 # Get the TeX Gyre Pagella from GUST
	cd TeXGyrePagella; @WGET@ $(TEXGYREPAGELLA_URL); \
	mkdir texgyrepagella; @UNZIP@ -j qpl*otf.zip -d texgyrepagella;
	@WGET@ $(TEXGYREPAGELLA_HISTORY_URL) -O $@/qpl-hist.txt
	@WGET@ $(TEXGYREPAGELLA_MANIFEST_URL) -O $@/MANIFEST-TeX-Gyre-Pagella.TXT
	@WGET@ $(TEXGYREPAGELLA_README_URL) -O $@/README-TeX-Gyre-Pagella.TXT
	 # Get the TeX Gyre Pagella Math from GUST
	cd TeXGyrePagella; @WGET@ $(TEXGYREPAGELLAMATH_URL); \
	@UNZIP@ -j texgyrepagella-math-*.zip -d texgyrepagella;

TeXGyrePagella: TeXGyrePagella/texgyrepagella
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/texgyrepagella-math.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ texgyrepagella-math.woff

# TeXGyreSchola
TEXGYRESCHOLA_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/schola/qcs2.005otf.zip"
TEXGYRESCHOLA_HISTORY_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/schola/qcs-hist.txt/at_download/file"
TEXGYRESCHOLA_MANIFEST_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/schola/manifest-tex-gyre-schola.txt/at_download/file"
TEXGYRESCHOLA_README_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/schola/readme-tex-gyre-schola.txt/at_download/file"
TEXGYRESCHOLAMATH_URL="http://www.gust.org.pl/projects/e-foundry/tg-math/download/texgyreschola-math-1533.zip"

TeXGyreSchola/texgyreschola:
	 # Get the TeX Gyre Schola from GUST
	cd TeXGyreSchola; @WGET@ $(TEXGYRESCHOLA_URL); \
	mkdir texgyreschola; @UNZIP@ qcs*otf.zip -d texgyreschola;
	@WGET@ $(TEXGYRESCHOLA_HISTORY_URL) -O $@/qcs-hist.txt
	@WGET@ $(TEXGYRESCHOLA_MANIFEST_URL) -O $@/MANIFEST-TeX-Gyre-Schola.TXT
	@WGET@ $(TEXGYRESCHOLA_README_URL) -O $@/README-TeX-Gyre-Schola.TXT
	 # Get the TeX Gyre Schola Math from GUST
	cd TeXGyreSchola; @WGET@ $(TEXGYRESCHOLAMATH_URL); \
	@UNZIP@ -j texgyreschola-math-*.zip -d texgyreschola;

TeXGyreSchola: TeXGyreSchola/texgyreschola
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/texgyreschola-math.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ texgyreschola-math.woff

# TeXGyreTermes
TEXGYRETERMES_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/termes/qtm2.004otf.zip"
TEXGYRETERMES_HISTORY_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/termes/qtm-hist.txt/at_download/file"
TEXGYRETERMES_MANIFEST_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/termes/manifest-tex-gyre-termes.txt/at_download/file"
TEXGYRETERMES_README_URL="http://www.gust.org.pl/projects/e-foundry/tex-gyre/termes/readme-tex-gyre-termes.txt/at_download/file"
TEXGYRETERMESMATH_URL="http://www.gust.org.pl/projects/e-foundry/tg-math/download/texgyretermes-math-1543.zip"

TeXGyreTermes/texgyretermes:
	 # Get the TeX Gyre Termes from GUST
	cd TeXGyreTermes; @WGET@ $(TEXGYRETERMES_URL); \
	mkdir texgyretermes; @UNZIP@ qtm*otf.zip -d texgyretermes;
	@WGET@ $(TEXGYRETERMES_HISTORY_URL) -O $@/qtm-hist.txt
	@WGET@ $(TEXGYRETERMES_MANIFEST_URL) -O $@/MANIFEST-TeX-Gyre-Termes.TXT
	@WGET@ $(TEXGYRETERMES_README_URL) -O $@/README-TeX-Gyre-Termes.TXT
	 # Get the TeX Gyre Termes Math from GUST
	cd TeXGyreTermes; @WGET@ $(TEXGYRETERMESMATH_URL); \
	@UNZIP@ -j texgyretermes-math-*.zip -d texgyretermes;

TeXGyreTermes: TeXGyreTermes/texgyretermes
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/texgyretermes-math.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ texgyretermes-math.woff

# STIX

STIX_URL="https://github.com/stipub/stixfonts/blob/master/zipfiles/STIX2_13-all.zip?raw=true"

STIX/stix:
	 # Get the package from fontforge
	cd STIX; @WGET@ $(STIX_URL) -O STIX.zip;
	mkdir $@; @UNZIP@ -j STIX/STIX.zip -d $@;

STIX: STIX/stix
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/STIXTwoMath-Regular.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ STIXTwoMath-Regular.woff

# XITS

XITS_URL="http://mirrors.ctan.org/fonts/xits.zip"

XITS/xits:
	 # Get the package from CTAN
	cd XITS; @WGET@ $(XITS_URL); @UNZIP@ xits.zip;

XITS: XITS/xits
	 # Generate CheckFont logs
	@PYTHON@ CheckFont.py $@/XITSMath-Regular.woff \
	> $@/CheckFontLog.txt 2> $@/CheckFontError.txt
	 # Generate the testcase
	@PYTHON@ GenerateHTMLTest.py $@ XITSMath-Regular.woff

webextension-mathml-fonts.zip: LatinModern/latinmodern-math.woff2 \
	LatinModern/GUST-FONT-LICENSE.txt \
	LatinModern/MANIFEST-Latin-Modern-Math.txt \
	STIX/STIX_2.0.0_license.pdf STIX/STIX2Math.woff2
# Package the Web Extension.
	mkdir -p webextension/fonts/LatinModern webextension/fonts/STIX
	for f in $^; do cp $$f webextension/fonts/$$f; done
	cd webextension; @ZIP@ -r ../$@ *

extension: webextension-mathml-fonts.zip

# Clean up
clean:
	rm -rf Asana/*.zip Asana/Asana-Math;
	rm -rf DejaVu/*.zip DejaVu/dejavu-fonts-ttf;
	rm -rf FiraMath/firamath;
	rm -rf Garamond/garamond;
	rm -rf GFS_NeoHellenic/gfs_neohellenic;
	rm -rf LatinModern/*.zip LatinModern/latinmodern;
	rm -rf LeteSansMath/*.zip LeteSansMath/lete-sans-math;
	rm -rf Libertinus/*.zip Libertinus/libertinus;
	rm -rf NeoEuler/*.zip NeoEuler/euler-otf-master;
	rm -rf NewComputerModern/*.zip NewComputerModern/newcomputermodern;
	rm -rf STIX/*.zip STIX/stix;
	rm -rf TeXGyre*/*.zip TeXGyre*/texgyre*;
	rm -rf XITS/*.zip XITS/xits;
	rm -rf webextension/fonts webextension-mathml-fonts.zip

distclean: clean
	rm -rf autom4te.cache config.log config.status Makefile;
	TOREMOVE=`ls */* | grep -v mathfonts.css | grep -v webextension | grep -v mozilla_mathml_test`; \
	if [ -n "$$TOREMOVE" ]; then \
	rm -rf $$TOREMOVE; \
	fi;
